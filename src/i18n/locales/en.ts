import type { Translations } from './types';

// English translations
const translations: Translations = {
  menu: {
    dashboard: 'Dashboard',
    status: 'Status',
    wan: 'WAN',
    lan: 'LAN',
    wlan: 'WLAN',
    statistics: 'Statistics',
    wifiNeighbor: 'WiFi Neighbor',
    meshInfo: 'Mesh Information',
    lcm: 'LCM',
    systemStats: 'System Stats',
    basicSetting: 'Basic Setting',
    wireless: 'Wireless',
    wanSetting: 'WAN',
    lanSetting: 'LAN',
    wifi: 'Wi-Fi',
    guestAccess: 'Guest Access',
    macFilter: 'MAC Filter',
    wirelessExtender: 'Wireless Extender',
    management: 'Management',
    ntp: 'NTP',
    ssh: 'SSH',
    advanced: 'Advanced',
    serviceControl: 'Service Control',
    ddns: 'DDNS',
    dmz: 'DMZ',
    device: 'Device Management',
    diagnostics : 'Diagnostics',
    firmware: 'Upgrade Firmware',
    reset: 'Device Reset',
    backup: 'Backup',
    xperienceControl: 'XperienceControl',
    application: 'Application',
    iot: 'Internet of Things',
    thread: 'Thread',
    matter: 'Matter'
  },
  header: {
    account: 'Account',
    logout: 'Logout'
  },
  dashboard: {
    system: 'System',
    softwareVersion: 'SoftwareVersion',
    hardwareVersion: 'HardwareVersion',
    model: 'Model',
    serialNumber: 'Serial Number',
    cpu: 'CPU',
    processes: 'Processes',
    memory: 'Memory',
    total: 'Total',
    free: 'Free',
    used: 'Used',
    wan: 'WAN',
    status: 'Status',
    speed: 'Speed',
    received: 'Received',
    sent: 'Sent',
    wifi: 'WiFi',
    clients: 'Clients',
    ethernet: 'Ethernet Ports',
    ipv4Address: 'IPv4 Address',
    ipv6Address: 'IPv6 Address',
    protocol: 'Protocol',
    subnetMask: 'Subnet Mask',
    defaultGateway: 'Default Gateway',
    primaryDNS: 'Primary DNS',
    secondaryDNS: 'Secondary DNS',
    macAddress: 'MAC Address',
    password: 'Password'
  },
  wan: {
    title: 'WAN Status',
    operationMode: 'Operation Mode',
    sensingPolicy: 'Sensing Policy',
    sensingTimeout: 'Sensing Timeout',
    name: 'Name',
    wanMode: 'WAN Mode',
    interface: 'Interface',
    macAddress: 'MAC Address',
    speed: 'Speed',
    duplex: 'Duplex',
    ipv4Address: 'IPv4 Address',
    status: 'Status',
    wanModeConfig: 'WAN Mode Config',
    dnsMode: 'DNS Mode',
    physicalType: 'Physical Type',
    origin: 'Origin',
    mode: 'Mode',
    address: 'Address',
    gateway: 'Gateway',
    dnsServer: 'DNS Server',
    subnetMask: 'Subnet Mask',
    type: 'Type',
    prefix: 'Prefix'
  },
  lan: {
    title: 'LAN',
    macAddress: 'MAC Address',
    mtu: 'MTU',
    ipv4: 'IPv4',
    ipv6: 'IPv6',
    name: 'Name',
    ipAddress: 'IP Address',
    netmask: 'Netmask',
    status: 'Status'
  },
  wlan: {
    title: 'WLAN Status',
    channel: 'Channel',
    bandwidth: 'Bandwidth',
    macAddress: 'MAC Address',
    interface: 'Interface',
    name: 'Name',
    alias: 'Alias',
    status: 'Status',
    ssid: 'SSID',
    authentication: 'Authentication',
    encryption: 'Encryption',
    password: 'Password',
    bssid: 'BSSID',
    auto: '(auto)',
    enable: 'Enable',
    disable: 'Disable'
  },
  statistics: {
    title: 'Statistics',
    ethernet: 'Statistics - Ethernet',
    wlan: 'Statistics - WLAN',
    port: 'Port',
    rxbytes: 'RxBytes',
    rxpackets: 'RxPackets',
    rxerror: 'RxError',
    rxdiscard: 'RxDiscard',
    txbytes: 'TxBytes',
    txpackets: 'TxPackets',
    txerror: 'TxError',
    txdiscard: 'TxDiscard'
  },
  wifiNeighbor: {
    title: 'WiFi Neighbor',
    wifiNeighbor: 'WiFi Neighbor',
    ssid: 'SSID',
    bssid: 'BSSID',
    channel: 'Channel',
    signal: 'Signal (%)',
    security: 'Security',
    wirelessMode: 'Wireless Mode',
    scan: 'SCAN',
    scanning: 'Scanning...'
  },
  mesh: {
    title: 'Mesh Information',
    networkInformation: 'Mesh Network Information',
    nodeList: 'Mesh Node List',
    clientList: 'Mesh Client List',
    name: 'Name',
    mode: 'Mode',
    ipAddress: 'IPv4 Address',
    macAddress: 'MAC Address',
    mediaType: 'Media Type',
    supportedBand: 'Supported Band',
    upstream: 'Upstream',
    action: 'Action',
    map: 'MAP',
    list: 'LIST',
    back: 'Back',
    steeringControl: 'Steering Control',
    selectedNode: 'Selected Node',
    destination: 'Destination',
    selectDestination: 'Select Destination',
    band: 'Band',
    selectBand: 'Select Band'
  },
  lcm: {
    title: 'Status - LCM',
    execEnv: 'Execution Environments',
    execUnits: 'Execution Units',
    deployUnits: 'Deployment Units',
    deploymentUnits: 'Deployment Units',
    name: 'Name',
    status: 'Status',
    url: 'URL',
    uuid: 'UUID',
    vendor: 'Vendor',
    version: 'Version'
  },
  systemStats: {
    title: 'System Stats',
    wanThroughput: 'WAN Throughput',
    lanThroughput: 'LAN Throughput',
    wifiThroughput: 'WiFi Throughput',
    tx: 'Tx (Sent)',
    rx: 'Rx (Received)'
  },
  wireless: {
    title: 'Wireless Settings',
    basicConfig: 'Basic Config',
    advancedConfig: 'Advanced Config',
    wpsConfig: 'WPS Configuration',
    meshNetwork: 'Mesh Network',
    settings: 'Settings',
    ssid: 'SSID',
    password: 'WPA Preshare Key',
    mode: 'Mode',
    bandwidth: 'Bandwidth',
    channel: 'Channel',
    autoChannel: 'Auto Channel',
    wpsConfiguration: 'WPS Configuration',
    wpsPushButton: 'WPS Push Button',
    wpsPushButtonDesc: 'Click "WPS Push Button", then press the WPS pushbutton on the device you want to connect within two minutes',
    wpsPinConnect: 'WPS PIN Code Connect',
    wpsPinConnectDesc: 'Enter the PIN code generated by the client device, then click Connect Device button to connect to Wi-Fi.',
    generatePinCode: 'Generate PIN Code',
    devicePinDesc: 'Enter the PIN code generated by the router on the device to connect to Wi-Fi',
    enterPin: 'Please Enter PIN Code',
    connect: 'Connect Device',
    vapInformation: 'VAP Information',
    band: 'Band',
    authentication: 'Authentication',
    encryption: 'Encryption',
    wpsStatus: 'WPS Status',
    easyMesh: 'EasyMesh',
    commonSsidConfig: 'Common SSID Configuration',
    pushButtonTitle: 'Connect a new device by pushbutton',
    pinConnectTitle: 'Connect a new device by PIN',
    devicePinTitle: 'PIN for adding this device to a network',
    pushButton: 'WPS Push Button',
    pinCode: 'PIN Code',
    pinCodeOfClient: 'PIN Code of Client Device',
    noPublicKeys: 'No public keys added',
    extender: 'Extender',
    enableWpsConfirm: 'Enable WPS',
    enableWpsMessage: '	Enabling WPS will disable the MAC filter. Are you sure you want to continue?'
  },
  guest: {
    title: 'Guest Access',
    guestWiFi: 'Guest WiFi',
    guestLAN: 'Guest LAN',
    deviceConnected: 'Device Connected',
    enable: 'Enable',
    mloEnable: 'MLO Enable',
    ssid: 'SSID',
    authentication: 'Authentication',
    password: 'Password',
    lanIpSetting: 'LAN IP Setting',
    ipAddress: 'IP Address',
    subnetMask: 'Subnet Mask',
    dhcpSetting: 'DHCP Setting',
    enableDhcpServer: 'Enable DHCP Server',
    dnsServer: 'DNS Server',
    beginAddress: 'Begin Address',
    endAddress: 'End Address',
    leaseTime: 'Lease Time',
    seconds: 'Seconds',
    hostName: 'Host Name',
    macAddress: 'MAC Address'
  },
  macfilter: {
    title: 'Wireless MAC Filter',
    ssid: 'SSID',
    aclMode: 'ACL Mode',
    disabled: 'Disabled',
    deny: 'Deny',
    allow: 'Allow',
    macAddressList: 'MAC Address Filter List',
    enterMacAddress: 'Enter MAC address (e.g., 00:11:22:33:44:55)',
    add: 'Add',
    no: 'No.',
    macAddress: 'MAC Address',
    action: 'Action',
    noMacAddresses: 'No MAC addresses added',
    emptyMacError: 'MAC address cannot be empty',
    invalidMacFormat: 'Invalid MAC address format',
    duplicateMacError: 'This MAC address already exists',
    changeModeTitle: 'Change MAC Filter Mode',
    changeModeMessage: 'Enabling MAC filter will disable WPS. Do you want to continue?',
    deleteMacTitle: 'Delete MAC Address',
    deleteMacMessage: 'Are you sure you want to delete this MAC address?',
    applyChangesTitle: 'Apply MAC Filter Settings',
    applyChangesMessage: 'Enabling MAC filter will disable WPS. Do you want to continue?'
  },
  wirelessExtender: {
    title: 'Wireless Extender',
    configuration: 'Extender Configurations',
    enabled: 'Extender Enabled',
    role: 'Extender Role',
    repeater: 'Repeater',
    meshAgent: 'Mesh Agent',
    connectionStatus: 'Connection Status',
    band: 'Band',
    status: 'Status',
    ssid: 'SSID',
    security: 'Security',
    wps: 'WPS',
    pinCode: 'WPS Pin Code',
    pairing: 'WPS Pairing',
    neighborScan: 'Neighbor AP Scan',
    scan: 'Scan',
    scanning: 'Scanning...',
    select: 'Select',
    connectToAP: 'Connect to AP',
    radioBand: 'Radio Band',
    wifiMode: 'WiFi Mode',
    wpaPreshareKey: 'WPA Preshare Key',
    connect: 'Connect',
    connected: 'Connected',
    disconnected: 'Disconnected'
  },
  wanSetup: {
    title: 'WAN Settings',
    modeSetup: 'WAN Mode Setup',
    modeManagement: 'WAN Mode Management',
    operationMode: 'Operation Mode',
    wanMode: 'WAN Mode',
    manual: 'Manual',
    auto: 'Automatic'
  },
  wanManagement: {
    addMode: 'Add WAN Mode',
    editMode: 'Edit WAN Mode',
    name: 'Name',
    interface: 'Interface',
    ipv4Mode: 'IPv4 Mode',
    ipv6Mode: 'IPv6 Mode',
    status: 'Status',
    type: 'Type',
    action: 'Action',
    physicalType: 'Physical Type',
    vlanType: 'VLAN Type',
    vlanId: 'VLAN ID',
    vlanPriority: 'VLAN Priority',
    pppoeUsername: 'PPPoE Username',
    pppoePassword: 'PPPoE Password',
    staticIpv4: 'Static IPv4 Address',
    staticIpv6: 'Static IPv6 Address',
    ipv4Address: 'IPv4 Address',
    ipv6Address: 'IPv6 Address',
    defaultRouter: 'Default Router',
    subnetMask: 'Subnet Mask',
    prefixLength: 'Prefix Length',
    dnsServers: 'DNS Servers',
    addInterface: 'Add Interface',
    edit: 'Edit',
    delete: 'Delete',
    detail: 'Detail',
    confirmDelete: 'Are you sure you want to delete this WAN mode?',
    enableSensing: 'Enable Sensing',
    ipv4DnsMode: 'IPv4 DNS Mode',
    ipv6DnsMode: 'IPv6 DNS Mode'
  },
  lanBasic: {
    title: 'LAN Settings',
    ipv4Configuration: 'IPv4 Configuration',
    deviceConnected: 'Device Connected',
    lanIpSetting: 'LAN IP Setting',
    enable: 'Enable',
    ipAddress: 'IP Address',
    subnetMask: 'Subnet Mask',
    dhcpv4Setting: 'DHCPv4 Setting',
    enableDhcpServer: 'Enable DHCP Server',
    dnsServer: 'DNS Server',
    beginAddress: 'Begin Address',
    endAddress: 'End Address',
    leaseTime: 'Lease Time',
    seconds: 'Seconds',
    ipAddressReservation: 'IP Address Reservation',
    add: 'Add',
    macAddress: 'MAC Address',
    action: 'Action',
    hostName: 'Host Name',
    refresh: 'Refresh',
    apply: 'Apply',
    cancel: 'Cancel'
  },
  serviceControl: {
    title: 'Service Control',
    management: 'Service Control Management',
    addRule: 'Add Rule',
    editRule: 'Edit Rule',
    serviceType: 'Service Type',
    accessDirection: 'Access Direction',
    protocol: 'Protocol',
    ipRange: 'IP Range',
    status: 'Status',
    action: 'Action',
    enabled: 'Enabled',
    disabled: 'Disabled',
    confirmDelete: 'Are you sure you want to delete this rule?'
  },
  dmz: {
    title: 'DMZ Settings',
    enable: 'Enable DMZ',
    ipAddress: 'IP Address',
    description: 'DMZ (Demilitarized Zone) allows a computer on your local network to be fully exposed to the Internet. This feature is useful for gaming or video conferencing applications that have problems working through NAT.'
  },
  ddns: {
    title: 'DDNS Settings',
    management: 'DDNS Management',
    addService: 'Add Service',
    editService: 'Edit Service',
    refresh: 'Refresh',
    no: 'No',
    provider: 'Service Provider',
    domain: 'Domain Name',
    username: 'Username',
    password: 'Password',
    wanInterface: 'WAN Interface',
    status: 'Status',
    lastUpdate: 'Last Update Time',
    action: 'Action',
    save: 'Save',
    cancel: 'Cancel',
    confirmDelete: 'Are you sure you want to delete this DDNS service?'
  },
  ntp: {
    title: 'NTP',
    currentTime: 'Current Time',
    timeZoneSelect: 'Time Zone Select',
    automaticDaylight: 'Automatically Adjust for Daylight Saving',
    enableNtp: 'Enable NTP client Update',
    ntpServer: 'NTP server',
    cancel: 'Cancel',
    apply: 'Apply',
    placeholder: 'Please Enter the value'
  },
  ssh: {
    title: 'SSH',
    serverManagement: 'SSH Server Management',
    publicKeyManagement: 'Public Key Management',
    currentSessions: 'Current Sessions',
    addServer: 'Add Server',
    editServer: 'Edit Server',
    id: 'ID',
    interface: 'Interface',
    status: 'Status',
    port: 'Port',
    autoDisableServer: 'Auto Disable Server',
    connectionTimeout: 'Connection Timeout',
    keepAliveMessage: 'KeepAlive Message',
    ipv4Prefix: 'IPv4 Prefix',
    ipv6Prefix: 'IPv6 Prefix',
    loginWithPassword: 'Login with Password',
    rootLogin: 'Root Login',
    rootLoginWithPassword: 'Root Login with Password',
    enabled: 'Enabled',
    disabled: 'Disabled',
    action: 'Action',
    enable: 'Enable SSH Server',
    allowPasswordLogin: 'Allow Password Login',
    allowRootLogin: 'Allow Root Login',
    allowAllIPv4: 'Allow All IPv4',
    allowAllIPv6: 'Allow All IPv6',
    maxAuthTries: 'Maximum Authentication Tries',
    idleTimeout: 'Idle Timeout (seconds)',
    confirmDelete: 'Are you sure you want to delete this SSH server?',
    comment: 'Comment',
    publicKey: 'Public Key',
    select: 'Select',
    clickToView: 'Click to View',
    key: 'Public Key',
    viewKey: 'View Key',
    newSshKey: 'New SSH Key',
    enterNewSshKey: 'Enter new SSH key...',
    confirmDeleteKey: 'Are you sure you want to delete this SSH key?',
    user: 'User',
    clientAddress: 'Client Address',
    clientPort: 'Client Port',
    serverId: 'Server ID',
    serverPort: 'Server Port',
    algorithm: 'Algorithm'
  },
  device: {
    title: 'Device Management',
    tr069Config: 'TR-069 Configuration',
    tr369Config: 'TR-369 Configuration',
    enableCWMP: 'Enable CWMP',
    acsUrl: 'ACS URL',
    connectionRequestUrl: 'Connection Request URL',
    acsCredentials: 'ACS Credentials',
    connectionRequestCredentials: 'Connection Request Credentials',
    username: 'Username',
    password: 'Password',
    enablePeriodicInform: 'Enable Periodic Inform',
    periodicInformInterval: 'Periodic Inform Interval',
    sendInform: 'Send Inform To ACS Server',
    alias: 'Alias',
    endpointId: 'Controller EndpointID',
    controllerTopic: 'Controller Topic',
    agentTopic: 'Agent Topic',
    brokerAddress: 'MQTT Broker Address',
    brokerPort: 'MQTT Broker Port',
    clientId: 'ClientID',
    status: 'Status',
    periodicNotify: 'Periodic Notify',
    keepAliveTime: 'Keep Alive Time',
    connectRetryTime: 'Connect Retry Time',
    connectRetryMaxInterval: 'Connect Retry Max Interval',
    protocolVersion: 'Protocol Version',
    transportProtocol: 'Transport Protocol',
    addController: 'Add Controller',
    editController: 'Edit Controller',
    confirmDelete: 'Are you sure you want to delete this controller?',
    action: 'Action',
    agentEndpointId: 'Agent EndpointID',
    maxControllersReached: 'Maximum number of controllers (5) reached',
    controller: 'Controller (MQTT)'
  },
  diagnostics: {
    title: 'Diagnostics Tools',
    ping: 'Ping',
    traceRoute: 'Trace Route',
    dnsLookup: 'DNS Lookup',
    interface: 'Interface',
    protocol: 'Protocol',
    targetHost: 'Target IP Address/Domain',
    repeatTimes: 'Repeat Times',
    start: 'Start',
    results: 'Results',
    hostAddress: 'Host IP Address',
    packetsInfo: 'Packets Information',
    sent: 'Sent',
    received: 'Received',
    lost: 'Lost',
    minRoundTrip: 'Minimum Round-trip Times',
    maxRoundTrip: 'Maximum Round-trip Times',
    avgRoundTrip: 'Average Round-trip Times',
    hop: 'Hop',
    host: 'Host',
    address: 'Address',
    rtt: 'RTT (ms)',
    dnsServer: 'DNS Server Name/DNS IP Address',
    status: 'Status',
    answerType: 'Answer Type',
    hostname: 'Hostname',
    ipAddresses: 'IP Addresses',
    responseTime: 'Response Time',
    dnsServerIp: 'DNS Server IP',
    processing: 'Processing...',
    errorState: 'Error: {state}',
    errorTimeout: 'Request timed out',
    errorInternal: 'Internal error occurred',
    errorNetwork: 'Network error occurred',
    errorInvalidHost: 'Invalid host specified',
    errorResolveFailed: 'Failed to resolve hostname'
  },
  firmware: {
    title: 'Upgrade Firmware',
    firmwareBank: 'Firmware Bank',
    status: 'Status',
    firmwareVersion: 'Firmware Version',
    action: 'Action',
    activate: 'Activate',
    uploadFirmware: 'Upload Firmware',
    chooseFile: 'Choose File',
    noFileSelected: 'No file selected',
    dragAndDrop: 'Drag and Drop files here',
    autoActivate: 'Auto Activate',
    updateFirmware: 'Update Firmware',
    selectFromComputer: '(or) Select file from your computer',
    processing: 'Processing...',
    upgrading: 'Firmware Upgrading...',
    activating: 'Activating Firmware...',
    powerOffWarning: 'Please do not power off the device.',
    rebootWarning: 'Device will reboot after activation.'
  },
  reset: {
    title: 'Device Reset',
    restartTitle: 'Restart Device',
    restartDescription: 'Restart the device. This will temporarily disconnect all users and connections. The device will be unavailable during the restart process.',
    restartButton: 'Restart',
    restartConfirm: 'Are you sure you want to restart the device?',
    factoryTitle: 'Factory Reset',
    factoryDescription: 'Reset the device to factory default settings. This will erase all configuration settings and restore the device to its original state.',
    factoryButton: 'Factory Reset',
    factoryConfirm: 'Are you sure you want to reset the device to factory settings? All configuration will be lost.',
    countdown: 'Device will restart in {seconds} seconds...',
    success: 'Command sent successfully'
  },
  backup: {
    title: 'Backup & Restore',
    backupTitle: 'Backup',
    backupDescription: 'Back up current configuration file to your local machine',
    backupButton: 'Backup',
    restoreTitle: 'Restore',
    restoreDescription: 'Restore configuration from backup file',
    dragAndDrop: 'Drag and Drop files here',
    selectFromComputer: '(or) Select file from your computer',
    chooseFile: 'Choose File',
    noFileSelected: 'No file selected',
    restoreButton: 'Restore',
    processing: 'Processing...'
  },
  xperienceControl: {
    title: 'XperienceControl',
    tagline: "XGiga Carrier Grade SpeedTest",
    poweredBy: "Powered by Streambow",
    description: 'Click the button below to start a speed test.',
    startTest: 'Start Speed Test',
    downloadSpeed: 'Download Speed',
    uploadSpeed: 'Upload Speed',
    pingInfo: 'Ping Info',
    mbps: 'Mbps',
    ms: 'ms',
    packetLoss: 'Packet Loss',
    minEchoTime: 'Min Echo Time',
    meanEchoTime: 'Mean Echo Time',
    maxEchoTime: 'Max Echo Time',
    testFailed: 'Speedtest failed. Please try again.',
    testing: 'Testing...'
  },
  thread: {
    title: 'Thread',
    status: 'Status',
    configuration: 'Configuration',
    join: 'Join Network',
    commissioner: 'Commissioner',
    topology: 'Topology',
    borderRouter: 'Border Router',
    borderAgentId: 'Border Agent ID',
    mle: 'MLE',
    extendedMac: 'Extended MAC',
    role: 'Role',
    rloc16: 'RLOC16',
    interface: 'Interface',
    firmwareVersion: 'Firmware Version',
    dataset: 'Dataset',
    timestamp: 'Timestamp',
    networkName: 'Network Name',
    networkKey: 'Network Key',
    channel: 'Channel',
    channelMask: 'Channel Mask',
    panId: 'PAN ID',
    extendedPanId: 'Extended PAN ID',
    meshLocalPrefix: 'Mesh Local Prefix',
    pskc: 'PSKc',
    securityPolicy: 'Security Policy',
    hexEncodedTlv: 'Hex-encoded TLV Format',
    leaderData: 'Leader Data',
    dataVersion: 'Data Version',
    leaderRouterId: 'Leader Router ID',
    stableDataVersion: 'Stable Data Version',
    partitionId: 'Partition ID',
    weighting: 'Weighting',
    stats: 'Stats',
    txBytes: 'TX Bytes',
    rxBytes: 'RX Bytes',
    txPackets: 'TX Packets',
    rxPackets: 'RX Packets',
    txDropped: 'TX Dropped',
    rxDropped: 'RX Dropped',
    txErrors: 'TX Errors',
    rxErrors: 'RX Errors',
    availablePans: 'Available Personal Area Networks',
    scan: 'Scan',
    no: 'No.',
    rssi: 'RSSI (dBm)',
    lqi: 'LQI',
    activeDataset: 'Active Dataset',
    pendingDataset: 'Pending Dataset',
    generateDataset: 'Generate Dataset',
    activeTimestamp: 'Active Timestamp',
    pendingTimestamp: 'Pending Timestamp',
    delay: 'Delay',
    update: 'Update',
    rotationTime: 'Rotation Time',
    autonomousEnrollment: 'Autonomous Enrollment',
    commercialCommissioning: 'Commercial Commissioning',
    externalCommissioning: 'External Commissioning',
    nativeCommissioning: 'Native Commissioning',
    networkKeyProvisioning: 'Network Key Provisioning',
    nonCcmRouters: 'Non CCM Routers',
    obtainNetworkKey: 'Obtain Network Key',
    routers: 'Routers',
    tobleLink: 'Toble Link',
    credentialType: 'Credential Type',
    credentialValue: 'Credential Value',
    joinButton: 'Join',
    joinSuccess: 'Successfully joined the network',
    joinFailed: 'Failed to join the network',
    commissionerEnable: 'Enable Commissioner',
    availableJoiner: 'Available Joiner',
    eui64OrDiscerner: 'EUI-64 or Discerner',
    pskd: 'PSKd',
    timeout: 'Timeout (s)',
    operation: 'Operation',
    add: 'Add',
    refresh: 'Refresh',
    type: 'Type'
  },
  matter: {
    title: 'Matter',
    description: 'Matter is a new smart home standard that aims to simplify development for manufacturers and increase compatibility for consumers.',
    openDashboard: 'Open Matter Dashboard',
    dashboardDescription: 'Click the button below to open the Matter Dashboard in a new window.',
    dashboardPort: 'The Matter Dashboard is available on port 8889.'
  },
  login: {
    title: 'Login',
    username: 'Username',
    password: 'Password',
    submit: 'Login',
    error: 'Invalid username or password'
  },
  common: {
    save: 'Save',
    cancel: 'Cancel',
    close: 'Close',
    refresh: 'Refresh',
    create: 'Create',
    apply: 'Apply',
    edit: 'Edit',
    delete: 'Delete',
    enable: 'Enable',
    loading: 'Loading...',
    yes: 'Yes',
    no: 'No',
    confirm: 'Confirm',
    generate: 'Generate',
    auto: 'Auto',
    manual: 'Manual'
  }
};

export default translations;